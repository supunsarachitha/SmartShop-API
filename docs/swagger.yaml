openapi: 3.0.0
info:
  title: SmartShop API
  version: 1.0.0
  description: >
    Open-source invoice and billing API for retail shops. Supports product, customer, invoice, and payment management.
  contact:
    name: Supun supunsarachitha
    url: https://github.com/supunsarachitha/SmartShop-API
servers:
  - url: https://api.smartshop.com/v1
    description: Production Server

paths:
  /products:
    get:
      summary: List all products
      responses:
        '200':
          description: A list of products
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
    post:
      summary: Create a new product
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
      responses:
        '201':
          description: Product created
    put:
      summary: Update a product
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
      responses:
        '200':
          description: Product updated
    delete:
      summary: Delete a product
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Product deleted

  /customers:
    get:
      summary: List all customers
      responses:
        '200':
          description: A list of customers
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Customer'
    post:
      summary: Add a new customer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Customer'
      responses:
        '201':
          description: Customer added
    put:
      summary: Update a customer
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Customer'
      responses:
        '200':
          description: Customer updated
    delete:
      summary: Delete a customer
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Customer deleted

  /invoices:
    get:
      summary: List all invoices
      responses:
        '200':
          description: A list of invoices
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Invoice'
    post:
      summary: Create a new invoice
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewInvoice'
      responses:
        '201':
          description: Invoice created
    put:
      summary: Update invoice status
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
      responses:
        '200':
          description: Invoice updated
    delete:
      summary: Delete an invoice
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Invoice deleted

  /payments:
    get:
      summary: List all payments
      responses:
        '200':
          description: A list of payments
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Payment'
    post:
      summary: Record a payment
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Payment'
      responses:
        '201':
          description: Payment recorded

components:
  schemas:
    Product:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        price:
          type: number
        stock:
          type: integer

    Customer:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        email:
          type: string
        phone:
          type: string

    Invoice:
      type: object
      properties:
        invoice_id:
          type: integer
        customer_id:
          type: integer
        items:
          type: array
          items:
            $ref: '#/components/schemas/InvoiceItem'
        total:
          type: number
        status:
          type: string

    NewInvoice:
      type: object
      properties:
        customer_id:
          type: integer
        items:
          type: array
          items:
            $ref: '#/components/schemas/InvoiceItem'

    InvoiceItem:
      type: object
      properties:
        product_id:
          type: integer
        quantity:
          type: integer

    Payment:
      type: object
      properties:
        payment_id:
          type: integer
        invoice_id:
          type: integer
        amount:
          type: number
        method:
          type: string
        status:
          type: string
        date:
          type: string
          format: date-time
